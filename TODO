+ only rescan Bouwconfig files if there is no .bouwconf available pls.

+ use the python logging module instead of self.args.verbose!

- let the build manager translate paths instead of the builders!
    - make it so, that the builder's execute_*() automatically receive the translated paths always

- put docstrings instead of doxygen tags

- implement implicit C header dependency scanner please!
    --> watch out for performance here!

- make a builder for sphinx

- implement inspect()

- implement mapping + ordering of builders (for Library->UseLibrary->Program)

- implement per-directory configuration overrides (for kernel linkscript override)

- how to deal with the 'tristate' type from kbuild ...

- implement simple cherrypy frontend

- support this syntax for overriding a tree specific item:

    Config('MYITEM', 'MYTREE',
            keyword1 = True,
            keyword2 = 'bar zzz')

- see if we could support interpolation in keywords, e.g.:
    
    Config('GCC', 'TARGET',
            ldscript = 'architecture/$ARCH/kernel.ld')

- implement daemon mode

- implement a --pretend mode, which doesn't really execute commands

+ implement --clean / -c

- implement --quiet / -q output plugin

- implement on-the-fly action generation from Workers, to support source generators

- support python 2.6.1 for MacOSX?

- fix error messages in plugins, especially on unknown attributes:
    Traceback (most recent call last):
      File "/home/fox/Repositories/Bouwer.git/source/bouwer/config.py", line 159, in __getattr__
          return self.__dict__[name]

- also decide() against the .bouwconf/Configuration!
    --> we may need to cache all Action command's... i.e. if the command changed, rebuild
    --> but then what about python functions?
    --> or, timestamp each Config object also

- check with pylint, pychecker please

- implement plugin.invoke('output', ...)

- test bouwer on existing projects
    - replace its build system completely with bouwer, e.g. apache or gcc or whatever

- test bouwer on all interesting operating systems and compilers

- implement checking for a valid CC configuration in inspect() of Object

    --> do this in a detect() function of the Object() builder plz
- There can also be a POSTBUILD work queue for post processing
- i.e. the work queues must have different levels or so

- add unittest/testoob test cases for bouwer?

- localizable configuration text/titles?
+ loadable plugins/modules
- status output modules:
    - verbose full command output:    gcc -o foo.o foo.c -Wall
    - fancified short command output: CC  foo.c
    - progress bar output:            [#######----------------] 33%
    - quiet output:
    - logfile output: build.log
- configuration frontends:
    - stdio fgets
    - curses menuconfig
    - qt4 graphical gui
    - html web based frontend
- http frontend for build output too.
    - e.g. an http daemon mode plugin, which has a config + output plugin
- IDE integration, e.g. eclipse
- builders
- pre/post builder hook
    - e.g. static code checks for C programs, which must happen on every invocation of e.g. the Object() builder
    - check must also happen on header files plz!
- configuration items
    +/- json persistency

